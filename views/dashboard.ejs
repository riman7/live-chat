<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .chat-container {
            width: 100%;
            max-width: 800px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
            overflow: hidden;
            height: 90vh;
        }

        /* Sidebar */
        .sidebar {
            width: 30%;
            background-color: #007bff;
            color: #fff;
            padding: 15px;
            display: flex;
            flex-direction: column;
        }

        .sidebar h2 {
            margin-bottom: 20px;
        }

        .friends-list {
            flex: 1;
            overflow-y: auto;
        }

        .friend {
            display: flex;
            align-items: center;
            padding: 10px;
            margin-bottom: 10px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            cursor: pointer;
        }

        .friend:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .friend img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .logout-button {
            margin-top: 20px;
            padding: 10px;
            background-color: #ff4b5c;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: center;
        }

        .logout-button:hover {
            background-color: #ff1c34;
        }

        /* Main Chat Area */
        .chat-main {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .chat-header {
            background-color: #007bff;
            color: #fff;
            padding: 15px;
            text-align: center;
        }

        .chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            border-bottom: 1px solid #ddd;
            display: flex;
            flex-direction: column;
        }

        .message {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 5px;
            background-color: #f1f1f1;
            max-width: 70%;
            word-wrap: break-word; /* Ensure long messages wrap */
        }

        .message.user {
            background-color: #007bff;
            color: #fff;
            margin-left: auto;
        }

        .message-info {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

        .message-info img {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .message-info span {
            font-weight: bold;
        }

        .chat-input {
            display: flex;
            padding: 10px;
            background-color: #f9f9f9;
        }

        #message-input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
        }

        #send-button {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        #send-button:hover {
            background-color: #0056b3;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .chat-container {
                flex-direction: column;
                height: 100vh;
                border-radius: 0;
            }

            .sidebar {
                width: 100%;
                height: 30%;
            }

            .chat-main {
                width: 100%;
                height: 70%;
            }

            .chat-header {
                padding: 10px;
            }

            .chat-messages {
                padding: 10px;
            }

            .chat-input {
                padding: 5px;
            }

            #message-input {
                padding: 8px;
            }

            #send-button {
                padding: 8px 15px;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <!-- Sidebar with Friends List and Logout Button -->
        <div class="sidebar">
            <h2>Friends</h2>
            <div class="friends-list">
                <% 
                    if(otherUsers.length > 0){
                        for(let i=0; i < otherUsers.length; i++){
                            %>
                            <div class="friend">
                                <img src="/images/<%=otherUsers[i].profile%>" alt="Friend 1">
                                <span><%=otherUsers[i].name%></span>
                            </div>
                            <%
                        }
                    }
                    %>
                
            </div>
            <a href="/logout" class="logout-button">Logout</a>
        </div>

        <!-- Main Chat Area -->
        
        
        <div class="chat-main">
            <div class="chat-header">
                <h2>User: <%= user.name %></h2>
            </div>
            <div class="chat-messages" id="chat-messages">
                <!-- Messages will be appended here -->
            </div>
            <div class="chat-input">
                <input type="text" id="message-input" placeholder="Type a message...">
                <button id="send-button">Send</button>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>

    <script>
        var sender_id = '<%=user._id%>';
        var socket = io('/user-namespace',{
            auth: {
                token: sender_id
            }
        });
        document.addEventListener('DOMContentLoaded', () => {
            const chatMessages = document.getElementById('chat-messages');
            const messageInput = document.getElementById('message-input');
            const sendButton = document.getElementById('send-button');
            const logoutButton = document.querySelector('.logout-button');
            const friendsList = document.querySelectorAll('.friend');

            // User data (for demonstration)
            const currentUser = {
                name: "You",
                profilePic: "https://via.placeholder.com/30"
            };

            // Send message functionality
            sendButton.addEventListener('click', sendMessage);
            messageInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });

            function sendMessage() {
                const messageText = messageInput.value.trim();
                if (messageText !== '') {
                    const messageElement = document.createElement('div');
                    messageElement.classList.add('message', 'user');

                    // Add user info (profile picture and username)
                    const messageInfo = document.createElement('div');
                    messageInfo.classList.add('message-info');
                    messageInfo.innerHTML = `
                        <img src="${currentUser.profilePic}" alt="${currentUser.name}">
                        <span>${currentUser.name}</span>
                    `;

                    // Add message text
                    const messageTextElement = document.createElement('div');
                    messageTextElement.textContent = messageText;

                    // Append to message element
                    messageElement.appendChild(messageInfo);
                    messageElement.appendChild(messageTextElement);

                    // Append to chat messages
                    chatMessages.appendChild(messageElement);
                    messageInput.value = '';
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                }
            }

            // Logout button functionality
            logoutButton.addEventListener('click', () => {
                alert('Logged out!');
                // Add logout logic here (e.g., redirect to login page)
            });

            // Friends list click functionality
            friendsList.forEach(friend => {
                friend.addEventListener('click', () => {
                    alert(`Chat with ${friend.querySelector('span').textContent}`);
                    // Add logic to switch chat to the selected friend
                });
            });

            // Simulate receiving a message (for demonstration purposes)
            setTimeout(() => {
                const messageElement = document.createElement('div');
                messageElement.classList.add('message');

                // Add friend info (profile picture and username)
                const messageInfo = document.createElement('div');
                messageInfo.classList.add('message-info');
                messageInfo.innerHTML = `
                    <img src="https://via.placeholder.com/30" alt="Friend 1">
                    <span>Friend 1</span>
                `;

                // Add message text
                const messageTextElement = document.createElement('div');
                messageTextElement.textContent = 'Hello! How can I help you?';

                // Append to message element
                messageElement.appendChild(messageInfo);
                messageElement.appendChild(messageTextElement);

                // Append to chat messages
                chatMessages.appendChild(messageElement);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 1000);
        });
    </script>
</body>
</html>